{"version":3,"file":"static/js/485.22eb9333.chunk.js","mappings":"uPAGaA,GAAiBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,6N,oCC8C3B,EA5Ca,WACT,OAA4CE,EAAAA,EAAAA,YAA5C,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBF,OAnBEC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,6GAESC,EAAAA,GAAAA,sBAFT,OAGlBN,GADIA,EAFc,QAGcO,KAAI,SAAAC,GAChC,MAAe,CACXC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MAEpB,IACDT,EAAkBD,GATA,gDAWlBW,QAAQC,IAAR,MACAT,GAAW,GAZO,yDAAH,qDAevBE,GACH,GAAE,KAIC,gCACI,2CAC4B,KAAb,OAAdL,QAAc,IAAdA,OAAA,EAAAA,EAAgBa,UACb,+BACKb,QADL,IACKA,OADL,EACKA,EAAgBO,KAAI,gBAAGE,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACjB,yBACI,SAACd,EAAD,CAAgBkB,GAAE,iBAAYL,GAA9B,SACKC,KAFAD,EADQ,MAS5BP,GAAWa,EAAAA,GAAAA,MAAY,oBAInC,C,qDC7CKC,E,OAAYC,EAAAA,OAAa,CAC3BC,QAAS,iCAGPC,EAAU,mCAIHC,EAAmB,mCAAG,oGACRJ,EAAUK,IAAI,uBAAwB,CACzDC,OAAQ,CACJC,QAASJ,KAHc,cACzBK,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qDAWnBC,EAAgB,mCAAG,WAAOC,GAAP,uFACLZ,EAAUK,IAAI,iBAAkB,CACnDC,OAAQ,CACJC,QAASJ,EACTU,MAAOD,KAJa,cACtBJ,EADsB,yBAQrBA,EAASC,KAAKC,SARO,2CAAH,sDAYhBI,EAAc,mCAAG,WAAOrB,GAAP,uFACHO,EAAUK,IAAV,iBAAwBZ,EAAxB,KAA+B,CAClDa,OAAQ,CACJC,QAASJ,KAHS,cACpBK,EADoB,yBAOnBA,EAASC,MAPU,2CAAH,sDAWdM,EAAc,mCAAG,WAAOtB,GAAP,uFACHO,EAAUK,IAAV,iBAAwBZ,EAAxB,aAAuC,CAC1Da,OAAQ,CACJC,QAASJ,KAHS,cACpBK,EADoB,yBAOnBA,EAASC,KAAKO,MAPK,2CAAH,sDAWdC,EAAiB,mCAAG,WAAOxB,GAAP,uFACNO,EAAUK,IAAV,iBAAwBZ,EAAxB,aAAuC,CAC1Da,OAAQ,CACJC,QAASJ,KAHY,cACvBK,EADuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,sDAUxBpB,EAAM,CACRc,oBAAAA,EACAO,iBAAAA,EACAG,eAAAA,EACAC,eAAAA,EACAE,kBAAAA,GAGJ,M","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nexport const TrendMovieLink = styled(Link)`\n    text-decoration: none;\n    font-family: Segoe UI;\n    margin-left: 15;\n    color: black;\n    &:hover,\n    &:focus {\n        color: orangered;\n        text-decoration: underline;\n    }\n`;","import { TrendMovieLink } from \"./Home.styled\";\nimport { useState, useEffect } from \"react\";\nimport { toast } from 'react-toastify';\nimport api from '../../services/api';\n\nconst Home = () => {\n    const [moviesTrending, setMoviesTrending] = useState();\n    const [isError, setIsError] = useState(false);\n\n    useEffect(() => {\n        const getMoviesTrending = async () => {\n            try {\n                let moviesTrending = await api.fetchMoviesTrending();\n                moviesTrending = moviesTrending.map(movie => {\n                    return movie = {\n                        id: movie.id,\n                        title: movie.title,\n                    }\n                });\n                setMoviesTrending(moviesTrending);\n            } catch (error) {\n                console.log(error);\n                setIsError(true);\n            }\n        }\n        getMoviesTrending();\n    }, [])\n\n  return (\n      \n        <section>\n            <h2>Trending today</h2>\n            {moviesTrending?.length !== 0 &&\n                <ul>\n                    {moviesTrending?.map(({ id, title}) => (\n                        <li key={id}>\n                            <TrendMovieLink to={`movies/${id}`}>\n                                {title}\n                            </TrendMovieLink>\n                        </li>\n                    ))}\n                </ul>\n            }\n            {isError && toast.error(\"We have error!\")}\n        </section>\n\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\nconst moviesAPI = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst API_KEY = '19de3f69b689775c27a0f6800fa7a97e';\n\n\n// movies trending  список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const fetchMoviesTrending = async () => {\n    const response = await moviesAPI.get('/trending/movie/day?', {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\n// movie search пошук фільму за ключовим словом на сторінці фільмів.\nexport const fetchMovieSearch = async (searchQuery) => {\n    const response = await moviesAPI.get('/search/movie?', {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n        },\n    });\n\n    return response.data.results;\n}\n\n// movie info запит повної інформації про фільм для сторінки кінофільму.\nexport const fetchMovieInfo = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data;\n}\n\n//  Movie Cast запит інформації про акторський склад для сторінки кінофільму.\nexport const fetchMovieCast = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/credits?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\n// Movie Reviews запит оглядів для сторінки кінофільму.\nexport const fetchMovieReviews = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/reviews?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\nconst api = {\n    fetchMoviesTrending,\n    fetchMovieSearch,\n    fetchMovieInfo,\n    fetchMovieCast,\n    fetchMovieReviews,\n}\n\nexport default api;"],"names":["TrendMovieLink","styled","Link","useState","moviesTrending","setMoviesTrending","isError","setIsError","useEffect","getMoviesTrending","api","map","movie","id","title","console","log","length","to","toast","moviesAPI","axios","baseURL","API_KEY","fetchMoviesTrending","get","params","api_key","response","data","results","fetchMovieSearch","searchQuery","query","fetchMovieInfo","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}