{"version":3,"file":"static/js/565.330483cc.chunk.js","mappings":"0NAEaA,EAAOC,EAAAA,GAAAA,GAAH,wKAUJC,EAAOD,EAAAA,GAAAA,GAAH,oEAKJE,EAAYF,EAAAA,GAAAA,EAAH,2CAITG,EAAeH,EAAAA,GAAAA,EAAH,iD,4CCczB,EA5Ba,WACT,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAAA,eAAmBH,GAASI,KAAKL,GAASM,MAAMC,QAAQC,MAC3D,GAAE,CAACP,IAIJ,OACI,gCACsB,KAAb,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMU,UAAgB,SAACZ,EAAD,wDACtBE,IACG,SAACN,EAAD,UACKM,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,KAAMC,EAA7B,EAA6BA,aAA7B,OACN,0BACKA,GAAgB,gBAAKC,IAT/B,kCAS6CD,EAAcE,IAAKH,EAAMI,MAAO,OAAY,gBAAKF,IAAKG,EAAeF,IAAI,YAAYC,MAAO,IAAKE,OAAQ,OAC7I,SAACxB,EAAD,UAAOkB,KACP,UAACjB,EAAD,yBAAuBgB,OAHlBD,EADH,QAW7B,C,qDC/BKS,E,OAAYC,EAAAA,OAAa,CAC3BC,QAAS,iCAGPC,EAAU,mCAIHC,EAAmB,mCAAG,oGACRJ,EAAUK,IAAI,uBAAwB,CACzDC,OAAQ,CACJC,QAASJ,KAHc,cACzBK,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qDAWnBC,EAAgB,mCAAG,WAAOC,GAAP,uFACLZ,EAAUK,IAAI,iBAAkB,CACnDC,OAAQ,CACJC,QAASJ,EACTU,MAAOD,KAJa,cACtBJ,EADsB,yBAQrBA,EAASC,KAAKC,SARO,2CAAH,sDAYhBI,EAAc,mCAAG,WAAOC,GAAP,uFACHf,EAAUK,IAAV,iBAAwBU,EAAxB,KAA+B,CAClDT,OAAQ,CACJC,QAASJ,KAHS,cACpBK,EADoB,yBAOnBA,EAASC,MAPU,2CAAH,sDAWdO,EAAc,mCAAG,WAAOD,GAAP,uFACHf,EAAUK,IAAV,iBAAwBU,EAAxB,aAAuC,CAC1DT,OAAQ,CACJC,QAASJ,KAHS,cACpBK,EADoB,yBAOnBA,EAASC,KAAK9B,MAPK,2CAAH,sDAWdsC,EAAiB,mCAAG,WAAOF,GAAP,uFACNf,EAAUK,IAAV,iBAAwBU,EAAxB,aAAuC,CAC1DT,OAAQ,CACJC,QAASJ,KAHY,cACvBK,EADuB,yBAOtBA,EAASC,KAAKC,SAPQ,2CAAH,sDAUxB1B,EAAM,CACRoB,oBAAAA,EACAO,iBAAAA,EACAG,eAAAA,EACAE,eAAAA,EACAC,kBAAAA,GAGJ,M","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    justify-content: center;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`;\n\nexport const Name = styled.h4`\n    width: 220px;\n    margin-bottom: 8px;\n`;\n\nexport const Character = styled.p`\n    width: 220px;\n`;\n\nexport const NotFoundCast = styled.p`\n    text-align: center;\n`;","import { List, Name, Character, NotFoundCast} from './Cast.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from 'services/api';\nimport ImageNotFound from '../Cast/ImageNotFound.png'\n\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        api.fetchMovieCast(movieId).then(setCast).catch(console.error);\n    }, [movieId])\n\n    const poster = 'https://image.tmdb.org/t/p/w500';\n\n    return (\n        <>\n            {cast?.length === 0 && <NotFoundCast>We don't have any information about cast.</NotFoundCast>}\n            {cast &&\n                <List>\n                    {cast.map(({ cast_id, character, name, profile_path }) => (\n                        <li key={cast_id}>\n                            {profile_path ? (<img src={poster + profile_path} alt={name} width={220} />) : (<img src={ImageNotFound} alt='Not found' width={220} height={330}/>)}\n                            <Name>{name}</Name>\n                            <Character>Character: {character}</Character>\n                        </li>\n                    ))}\n                </List>\n            }\n        </>\n    )\n}\n\nexport default Cast;","import axios from 'axios';\n\nconst moviesAPI = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n});\n\nconst API_KEY = '19de3f69b689775c27a0f6800fa7a97e';\n\n\n// movies trending  список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const fetchMoviesTrending = async () => {\n    const response = await moviesAPI.get('/trending/movie/day?', {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\n// movie search пошук фільму за ключовим словом на сторінці фільмів.\nexport const fetchMovieSearch = async (searchQuery) => {\n    const response = await moviesAPI.get('/search/movie?', {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n        },\n    });\n\n    return response.data.results;\n}\n\n// movie info запит повної інформації про фільм для сторінки кінофільму.\nexport const fetchMovieInfo = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data;\n}\n\n//  Movie Cast запит інформації про акторський склад для сторінки кінофільму.\nexport const fetchMovieCast = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/credits?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\n// Movie Reviews запит оглядів для сторінки кінофільму.\nexport const fetchMovieReviews = async (id) => {\n    const response = await moviesAPI.get(`/movie/${id}/reviews?`, {\n        params: {\n            api_key: API_KEY,\n        },\n    });\n\n    return response.data.results;\n}\n\nconst api = {\n    fetchMoviesTrending,\n    fetchMovieSearch,\n    fetchMovieInfo,\n    fetchMovieCast,\n    fetchMovieReviews,\n}\n\nexport default api;"],"names":["List","styled","Name","Character","NotFoundCast","useState","cast","setCast","movieId","useParams","useEffect","api","then","catch","console","error","length","map","cast_id","character","name","profile_path","src","alt","width","ImageNotFound","height","moviesAPI","axios","baseURL","API_KEY","fetchMoviesTrending","get","params","api_key","response","data","results","fetchMovieSearch","searchQuery","query","fetchMovieInfo","id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}